{
  "type": "object",
  "required": [
    "mach_composer",
    "general_config",
    "sites"
  ],
  "properties": {
    "mach_composer": {
      "$ref": "#/definitions/MachComposerConfig"
    },
    "general_config": {
      "$ref": "#/definitions/GlobalConfig"
    },
    "sites": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Site"
      }
    },
    "components": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ComponentConfig"
      },
      "default": []
    }
  },
  "description": "Main MACH configuration object.",
  "$schema": "http://json-schema.org/draft-06/schema#",
  "definitions": {
    "MachComposerConfig": {
      "type": "object",
      "required": [
        "version"
      ],
      "properties": {
        "version": {
          "type": "string"
        }
      },
      "description": "MachComposerConfig(version: str)"
    },
    "GlobalConfig": {
      "type": "object",
      "required": [
        "environment",
        "terraform_config",
        "cloud"
      ],
      "properties": {
        "environment": {
          "type": "string"
        },
        "terraform_config": {
          "$ref": "#/definitions/TerraformConfig"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "aws",
            "azure"
          ]
        },
        "sentry": {
          "$ref": "#/definitions/SentryConfig"
        },
        "azure": {
          "$ref": "#/definitions/AzureConfig"
        },
        "contentful": {
          "$ref": "#/definitions/ContentfulConfig"
        },
        "amplience": {
          "$ref": "#/definitions/AmplienceConfig"
        }
      },
      "description": "Config that is shared across sites."
    },
    "TerraformConfig": {
      "type": "object",
      "properties": {
        "azure_remote_state": {
          "$ref": "#/definitions/AzureTFState"
        },
        "aws_remote_state": {
          "$ref": "#/definitions/AWSTFState"
        },
        "providers": {
          "$ref": "#/definitions/TerraformProviders"
        }
      },
      "description": "Terraform configuration."
    },
    "AzureTFState": {
      "type": "object",
      "required": [
        "resource_group",
        "storage_account",
        "container_name",
        "state_folder"
      ],
      "properties": {
        "resource_group": {
          "type": "string"
        },
        "storage_account": {
          "type": "string"
        },
        "container_name": {
          "type": "string"
        },
        "state_folder": {
          "type": "string"
        }
      },
      "description": "Azure storage account state backend configuration."
    },
    "AWSTFState": {
      "type": "object",
      "required": [
        "bucket",
        "key_prefix",
        "region"
      ],
      "properties": {
        "bucket": {
          "type": "string"
        },
        "key_prefix": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "role_arn": {
          "type": "string"
        },
        "lock_table": {
          "type": "string"
        }
      },
      "description": "AWS S3 bucket state backend configuration."
    },
    "TerraformProviders": {
      "type": "object",
      "properties": {
        "aws": {
          "type": "string"
        },
        "azure": {
          "type": "string"
        },
        "commercetools": {
          "type": "string"
        },
        "sentry": {
          "type": "string"
        },
        "contentful": {
          "type": "string"
        },
        "amplience": {
          "type": "string"
        }
      },
      "description": "Terraform provider version overwrites."
    },
    "SentryConfig": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string"
        },
        "rate_limit_window": {
          "type": "integer"
        },
        "rate_limit_count": {
          "type": "integer"
        },
        "auth_token": {
          "type": "string"
        },
        "base_url": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "organization": {
          "type": "string"
        }
      },
      "description": "Global Sentry configuration."
    },
    "AzureConfig": {
      "type": "object",
      "required": [
        "tenant_id",
        "subscription_id",
        "region"
      ],
      "properties": {
        "tenant_id": {
          "type": "string"
        },
        "subscription_id": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "frontdoor": {
          "$ref": "#/definitions/FrontdoorSettings"
        },
        "resources_prefix": {
          "type": "string",
          "default": ""
        },
        "service_object_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "service_plans": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServicePlan"
          },
          "default": {}
        }
      },
      "description": "Azure configuration."
    },
    "FrontdoorSettings": {
      "type": "object",
      "required": [
        "dns_resource_group"
      ],
      "properties": {
        "dns_resource_group": {
          "type": "string"
        },
        "ssl_key_vault": {
          "$ref": "#/definitions/FrontdoorSslConfig"
        },
        "suppress_changes": {
          "type": "boolean",
          "default": false
        }
      },
      "description": "Frontdoor settings."
    },
    "FrontdoorSslConfig": {
      "type": "object",
      "required": [
        "name",
        "resource_group",
        "secret_name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "resource_group": {
          "type": "string"
        },
        "secret_name": {
          "type": "string"
        }
      },
      "description": "FrontdoorSslConfig(name: str, resource_group: str, secret_name: str)"
    },
    "ServicePlan": {
      "type": "object",
      "required": [
        "kind",
        "tier",
        "size"
      ],
      "properties": {
        "kind": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "size": {
          "type": "string"
        },
        "capacity": {
          "type": "integer"
        },
        "dedicated_resource_group": {
          "type": "boolean",
          "default": false
        },
        "per_site_scaling": {
          "type": "boolean",
          "default": false
        }
      },
      "description": "ServicePlan(kind: str, tier: str, size: str, capacity: Union[int, NoneType] = None, dedicated_resource_group: bool = <factory>, per_site_scaling: bool = <factory>)"
    },
    "ContentfulConfig": {
      "type": "object",
      "required": [
        "cma_token",
        "organization_id"
      ],
      "properties": {
        "cma_token": {
          "type": "string"
        },
        "organization_id": {
          "type": "string"
        }
      },
      "description": "Generic Contenful configuration."
    },
    "AmplienceConfig": {
      "type": "object",
      "required": [
        "client_id",
        "client_secret"
      ],
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        }
      },
      "description": "Generic Amplience configuration."
    },
    "Site": {
      "type": "object",
      "required": [
        "identifier"
      ],
      "properties": {
        "identifier": {
          "type": "string"
        },
        "endpoints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Endpoint"
          },
          "default": {}
        },
        "commercetools": {
          "$ref": "#/definitions/CommercetoolsSettings"
        },
        "contentful": {
          "$ref": "#/definitions/ContentfulSettings"
        },
        "amplience": {
          "$ref": "#/definitions/AmplienceSettings"
        },
        "apollo_federation": {
          "$ref": "#/definitions/ApolloFederationSettings"
        },
        "azure": {
          "$ref": "#/definitions/SiteAzureSettings"
        },
        "aws": {
          "$ref": "#/definitions/SiteAWSSettings"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "default": []
        },
        "sentry": {
          "$ref": "#/definitions/SentryDsn"
        }
      },
      "description": "Site definition."
    },
    "Endpoint": {
      "type": "object",
      "required": [
        "url",
        "key"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "zone": {
          "type": "string"
        },
        "aws": {
          "$ref": "#/definitions/AWSEndpoint"
        },
        "azure": {
          "$ref": "#/definitions/AzureEndpoint"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          },
          "default": []
        }
      },
      "description": "Endpoint(url: str, key: str, zone: Union[str, NoneType] = None, aws: Union[mach.types.sites.AWSEndpoint, NoneType] = None, azure: Union[mach.types.sites.AzureEndpoint, NoneType] = None, components: List[ForwardRef('Component')] = <factory>)"
    },
    "AWSEndpoint": {
      "type": "object",
      "properties": {
        "throttling_burst_limit": {
          "type": "integer"
        },
        "throttling_rate_limit": {
          "type": "integer"
        },
        "enable_cdn": {
          "type": "boolean",
          "default": false
        }
      },
      "description": "AWSEndpoint(throttling_burst_limit: Union[int, NoneType] = None, throttling_rate_limit: Union[int, NoneType] = None, enable_cdn: Union[bool, NoneType] = <factory>)"
    },
    "AzureEndpoint": {
      "type": "object",
      "properties": {
        "session_affinity_enabled": {
          "type": "boolean",
          "default": false
        },
        "session_affinity_ttl_seconds": {
          "type": "integer",
          "default": 0
        },
        "waf_policy_id": {
          "type": "string"
        }
      },
      "description": "AzureEndpoint(session_affinity_enabled: Union[bool, NoneType] = <factory>, session_affinity_ttl_seconds: Union[int, NoneType] = <factory>, waf_policy_id: Union[str, NoneType] = None)"
    },
    "Component": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "default": {}
        },
        "secrets": {
          "type": "object",
          "default": {}
        },
        "store_variables": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "default": {}
        },
        "store_secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "default": {}
        },
        "health_check_path": {
          "type": "string"
        },
        "sentry": {
          "$ref": "#/definitions/SentryDsn"
        },
        "azure": {
          "$ref": "#/definitions/ComponentAzureConfig"
        }
      },
      "description": "Component configuration."
    },
    "SentryDsn": {
      "type": "object",
      "properties": {
        "dsn": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "rate_limit_window": {
          "type": "integer"
        },
        "rate_limit_count": {
          "type": "integer"
        }
      },
      "description": "Specific sentry DSN settings."
    },
    "ComponentAzureConfig": {
      "type": "object",
      "properties": {
        "service_plan": {
          "type": "string"
        },
        "short_name": {
          "type": "string"
        }
      },
      "description": "ComponentAzureConfig(service_plan: Union[str, NoneType] = None, short_name: Union[str, NoneType] = None)"
    },
    "CommercetoolsSettings": {
      "type": "object",
      "required": [
        "project_key",
        "client_id",
        "client_secret",
        "scopes"
      ],
      "properties": {
        "project_key": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "scopes": {
          "type": "string"
        },
        "token_url": {
          "type": "string",
          "default": "https://auth.europe-west1.gcp.commercetools.com"
        },
        "api_url": {
          "type": "string",
          "default": "https://api.europe-west1.gcp.commercetools.com"
        },
        "project_settings": {
          "$ref": "#/definitions/CommercetoolsProjectSettings"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsChannel"
          },
          "default": []
        },
        "taxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsTax"
          },
          "default": []
        },
        "tax_categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsTaxCategory"
          },
          "default": []
        },
        "stores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsStore"
          },
          "default": []
        },
        "zones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsZone"
          },
          "default": []
        },
        "frontend": {
          "$ref": "#/definitions/CommercetoolsFrontendSettings"
        }
      },
      "description": "commercetools configuration."
    },
    "CommercetoolsProjectSettings": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "messages_enabled": {
          "type": "boolean",
          "default": true
        }
      },
      "description": "CommercetoolsProjectSettings(currencies: Union[List[str], NoneType] = None, languages: Union[List[str], NoneType] = None, countries: Union[List[str], NoneType] = None, messages_enabled: bool = <factory>)"
    },
    "CommercetoolsChannel": {
      "type": "object",
      "required": [
        "key",
        "roles"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "commercetools channel definition."
    },
    "CommercetoolsTax": {
      "type": "object",
      "required": [
        "country",
        "amount",
        "name"
      ],
      "properties": {
        "country": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "included_in_price": {
          "type": "boolean",
          "default": true
        }
      },
      "description": "commercetools tax definition."
    },
    "CommercetoolsTaxCategory": {
      "type": "object",
      "required": [
        "key",
        "name"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsTax"
          },
          "default": []
        }
      },
      "description": "commercetools tax categories definition."
    },
    "CommercetoolsStore": {
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "managed": {
          "type": "boolean",
          "default": true
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "distribution_channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "supply_channels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "description": "commercetools store definition."
    },
    "CommercetoolsZone": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "default": ""
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommercetoolsZoneLocation"
          },
          "default": []
        }
      },
      "description": "CommercetoolsZone(name: str, description: str = '', locations: List[mach.types.sites.CommercetoolsZoneLocation] = <factory>)"
    },
    "CommercetoolsZoneLocation": {
      "type": "object",
      "required": [
        "country"
      ],
      "properties": {
        "country": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "default": ""
        }
      },
      "description": "CommercetoolsZoneLocation(country: str, state: str = '')"
    },
    "CommercetoolsFrontendSettings": {
      "type": "object",
      "properties": {
        "create_credentials": {
          "type": "boolean",
          "default": true
        },
        "permission_scopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "create_anonymous_token",
            "manage_my_profile",
            "manage_my_orders",
            "manage_my_shopping_lists",
            "manage_my_payments",
            "view_products",
            "view_project_settings"
          ]
        }
      },
      "description": "CommercetoolsFrontendSettings(create_credentials: bool = <factory>, permission_scopes: List[str] = <factory>)"
    },
    "ContentfulSettings": {
      "type": "object",
      "required": [
        "space"
      ],
      "properties": {
        "space": {
          "type": "string"
        },
        "default_locale": {
          "type": "string",
          "default": "en-US"
        },
        "cma_token": {
          "type": "string",
          "default": ""
        },
        "organization_id": {
          "type": "string",
          "default": ""
        }
      },
      "description": "Contentful settings."
    },
    "AmplienceSettings": {
      "type": "object",
      "required": [
        "hub_id"
      ],
      "properties": {
        "hub_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string",
          "default": ""
        },
        "client_secret": {
          "type": "string",
          "default": ""
        }
      },
      "description": "Amplience settings."
    },
    "ApolloFederationSettings": {
      "type": "object",
      "required": [
        "api_key",
        "graph",
        "graph_variant"
      ],
      "properties": {
        "api_key": {
          "type": "string"
        },
        "graph": {
          "type": "string"
        },
        "graph_variant": {
          "type": "string"
        }
      },
      "description": "Apollo Federation settings."
    },
    "SiteAzureSettings": {
      "type": "object",
      "properties": {
        "frontdoor": {
          "$ref": "#/definitions/FrontdoorSettings"
        },
        "alert_group": {
          "$ref": "#/definitions/AlertGroup"
        },
        "resource_group": {
          "type": "string",
          "default": ""
        },
        "tenant_id": {
          "type": "string",
          "default": ""
        },
        "subscription_id": {
          "type": "string",
          "default": ""
        },
        "region": {
          "type": "string",
          "default": ""
        },
        "service_object_ids": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "service_plans": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ServicePlan"
          },
          "default": {}
        }
      },
      "description": "Site-specific Azure settings."
    },
    "AlertGroup": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "alert_emails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "webhook_url": {
          "type": "string"
        },
        "logic_app": {
          "type": "string"
        }
      },
      "description": "Alert group configuration."
    },
    "SiteAWSSettings": {
      "type": "object",
      "required": [
        "account_id",
        "region"
      ],
      "properties": {
        "account_id": {
          "type": "integer"
        },
        "region": {
          "type": "string"
        },
        "deploy_role_name": {
          "type": "string"
        },
        "extra_providers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AWSProvider"
          },
          "default": []
        }
      },
      "description": "Site-specific AWS settings."
    },
    "AWSProvider": {
      "type": "object",
      "required": [
        "name",
        "region"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "description": "AWS provider configuration."
    },
    "ComponentConfig": {
      "type": "object",
      "required": [
        "name",
        "source",
        "version"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "integrations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "endpoints": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "default": {}
        },
        "health_check_path": {
          "type": "string"
        },
        "azure": {
          "$ref": "#/definitions/ComponentAzureConfig"
        },
        "branch": {
          "type": "string"
        },
        "artifacts": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/LocalArtifact"
          },
          "default": {}
        }
      },
      "description": "Component definition."
    },
    "LocalArtifact": {
      "type": "object",
      "required": [
        "script",
        "filename"
      ],
      "properties": {
        "script": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "workdir": {
          "type": "string"
        }
      },
      "description": "LocalArtifact(script: str, filename: str, workdir: Union[str, NoneType] = None)"
    }
  }
}